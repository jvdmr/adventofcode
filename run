#!/bin/bash

function show_help () {
  echo "$0 [-h] [-t] [-c] [-i inputfile] <year>/<day> [part]

-h              help (this)

-p              Don't run tests

-i testfile     Only run with testfile as input

-t              Only run tests

-c              Only compile
  "
}

TEST=true
PROD=true
while getopts "hti:cp" opt; do
  case "$opt" in
  h|\?)
    show_help
    exit 0
    ;;
  p)
    TEST=false
    ;;
  t)
    PROD=false
    ;;
  i)
    input="${OPTARG}"
    TEST=false
    ;;
  c)
    TEST=false
    PROD=false
    ;;
  :)
    echo "Option -$OPTARG requires an argument." >&2
    exit 1
    ;;
  esac
done

shift $(($OPTIND - 1))
dir="$1"
datestr=${dir#src/AoC}
year=${datestr%/Day*}
day=${datestr#*/Day}
RUNARGS="--yearstr=${year} --daystr=${day}"
part="$2"
if [ -n "$part" ]
then
	RUNARGS="${RUNARGS} --part=${part}"
fi

cabal new-build aoc
if [ $? -gt 0 ]
then
	exit 1
fi

if $TEST
then
	for testinput in $dir/testinput*
	do
		echo Running $testinput
    if [ -n "$part" ]
    then
      time cabal run aoc -- $RUNARGS < $testinput
    else
      time cabal run aoc -- $RUNARGS --part=1 < $testinput
      echo
      time cabal run aoc -- $RUNARGS --part=2 < $testinput
    fi
    echo
	done
fi

if $PROD
then
  if [ -n "$input" ]
  then
		echo Running $input
    if [ -n "$part" ]
    then
      time cabal run aoc -- $RUNARGS < $input
    else
      time cabal run aoc -- $RUNARGS --part=1 < $input
      echo
      time cabal run aoc -- $RUNARGS --part=2 < $input
    fi
  else
    echo Running actual input
    if [ -n "$part" ]
    then
      time cabal run aoc -- $RUNARGS < $dir/input
    else
      time cabal run aoc -- $RUNARGS --part=1 < $dir/input
      echo
      time cabal run aoc -- $RUNARGS --part=2 < $dir/input
    fi
  fi
fi
